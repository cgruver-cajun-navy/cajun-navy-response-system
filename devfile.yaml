schemaVersion: 2.2.0
attributes:
  controller.devfile.io/storage-type: per-workspace
metadata:
  name: cajun-navy-response-system
projects:
- name: cajun-navy-response-system
  git:
    checkoutFrom:
      remote: origin
      revision: main
    remotes:
      origin: https://github.com/cgruver-cajun-navy/cajun-navy-response-system.git
- name: disaster
  git:
    checkoutFrom:
      remote: origin
      revision: main
    remotes:
      origin: https://github.com/cgruver-cajun-navy/disaster.git
- name: responder
  git:
    checkoutFrom:
      remote: origin
      revision: main
    remotes:
      origin: https://github.com/cgruver-cajun-navy/responder.git
- name: mission
  git:
    checkoutFrom:
      remote: origin
      revision: main
    remotes:
      origin: https://github.com/cgruver-cajun-navy/mission.git
components:
- name: dev-tools
  attributes:
    pod-overrides:
      metadata:
        annotations:
          io.kubernetes.cri-o.Devices: "/dev/fuse,/dev/net/tun"
      spec:
        hostUsers: false
    container-overrides: 
      securityContext:
        procMount: Unmasked
  container: 
    # image: quay.io/cgruver0/che/cajun-navy:latest
    image: nexus.clg.lab:5000/dev-spaces/cajun-navy:latest
    memoryRequest: 1Gi
    memoryLimit: 8Gi
    cpuRequest: 50m
    cpuLimit: 2000m
    mountSources: true
    sourceMapping: /projects
    env:
    - name: SHELL
      value: "/bin/zsh"
    - name: VSCODE_DEFAULT_WORKSPACE
      value: "/projects/cajun-navy-response-system/cajun-navy.code-workspace"
    - name: JAVA_HOME 
      value: /etc/alternatives/jre_21
    - name: HOME
      value: "/projects/home"
    - name: API_PORT
      value: '8080'
    - name: CORS_ORIGINS
      value: "/.*/"
    - name: CORS_METHODS
      value: "GET,POST,DELETE"
    endpoints:
    - name: node
      targetPort: 4200
      exposure: public
      protocol: https
    - name: https-quarkus
      targetPort: 8080
      exposure: public
      protocol: https
    - name: debug
      exposure: internal
      targetPort: 5858
    - name: dt-socket
      exposure: internal
      targetPort: 5005
- name: cassandra
  container:
    image: quay.io/cgruver0/che/cassandra-5:latest
    sourceMapping: /projects
    memoryRequest: 256Mi
    memoryLimit: 1Gi
    cpuRequest: 50m
    cpuLimit: 500m
    env:
      - name: JVM_OPTS
        value: "-Xms128M -Xmx1G"
    endpoints:
      - exposure: internal
        name: cassandra
        targetPort: 9042
      - exposure: internal
        name: cass-storage
        targetPort: 7000
    volumeMounts:
      - name: cassandra
        path: /cassandra
- name: prep-workspace
  container:
    args:
      - '-c'
      - >-
        mkdir -p /projects/bin && cp /usr/bin/oc /projects/bin/oc && cp /usr/bin/kubectl /projects/bin/kubectl && if [[ -f ${HOME}/.kube/config ]]; then rm ${HOME}/.kube/config; fi
    command:
      - /bin/bash
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    sourceMapping: /projects
    mountSources: true
    memoryRequest: 128M
    memoryLimit: 256M
- volume:
    size: 4Gi
  name: projects
- volume:
    size: 4Gi
  name: cassandra
commands:
- exec:
    commandLine: mvn package
    component: dev-tools
    group:
      isDefault: true
      kind: build
    workingDir: '/projects/che-demo-app-service'
  id: package
- exec:
    commandLine: mvn package -Dnative -Dmaven.test.skip -Dquarkus.native.native-image-xmx=2G
    component: dev-tools
    group:
      kind: build
    label: Package Native
    workingDir: '/projects/che-demo-app-service'
  id: package-native
- exec:
    commandLine: 'quarkus dev -Dmaven.repo.local=/home/user/.m2/repository -Dquarkus.http.host=0.0.0.0'
    component: dev-tools
    hotReloadCapable: true
    group:
      isDefault: true
      kind: run
    label: Start Quarkus Development mode (Hot reload)
    workingDir: '/projects/che-demo-app-service'
  id: quarkus-dev-mode
- exec:
    commandLine: '/projects/che-demo-app/setUiEnv.sh -f=/projects/che-demo-app-ui/src/environments/environment.development.ts -s=/projects/che-demo-app-ui/env.dev -c=dev-tools -p=8080 -e=https-quarkus -v=backendApiUrl && npm install && NG_FORCE_TTY=false ng serve --disable-host-check --host 0.0.0.0'
    component: dev-tools
    hotReloadCapable: true
    group:
      isDefault: true
      kind: run
    label: Start NodeJS Development Local Service (Hot reload)
    workingDir: '/projects/che-demo-app-ui'
  id: node-dev-mode
- exec:
    commandLine: '/projects/che-demo-app/setUiEnvShared.sh -f=/projects/che-demo-app-ui/src/environments/environment.development.ts -s=/projects/che-demo-app-ui/env.dev -v=backendApiUrl && npm install && NG_FORCE_TTY=false ng serve --disable-host-check --host 0.0.0.0'
    component: dev-tools
    hotReloadCapable: true
    group:
      isDefault: true
      kind: run
    label: Start NodeJS Development in Buddy Mode (Hot reload)
    workingDir: '/projects/che-demo-app-ui'
  id: node-dev-mode-remote
- apply:
    component: oc-cli
    label: Copy OpenShift CLI
  id: cp-oc-cli
- apply:
    component: prep-workspace
    label: Prestart Workspace Prep
  id: prep-workspace
events:
  preStart:
    - prep-workspace